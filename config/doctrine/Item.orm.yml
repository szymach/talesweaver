---
Domain\Entity\Item:
    type: entity
    repositoryClass: App\Repository\Doctrine\ItemRepository
    id:
        id:
            type: uuid
            generator: { strategy: NONE }
    fsi:
        translatable:
            locale: locale
            fields:
                name:
                    mappedBy: translations
                    targetField: name
                description:
                    mappedBy: translations
                    targetField: description
    fields:
        avatarKey:
            type: text
            nullable: true
            fsi: { uploadable: { targetField: avatar } }
        createdAt:
            type: datetime
        updatedAt:
            type: datetime
            nullable: true
    oneToMany:
        translations:
            targetEntity: Domain\Entity\Translation\ItemTranslation
            mappedBy: item
            indexBy: locale
            cascade: [persist, remove]
    manyToOne:
        createdBy:
            targetEntity:  Domain\Entity\User
            joinColumn:
                onDelete: CASCADE
    manyToMany:
        scenes:
            targetEntity: Domain\Entity\Scene
            mappedBy: items
        characters:
            targetEntity: Domain\Entity\Character
            mappedBy: items
        locations:
            targetEntity: Domain\Entity\Location
            mappedBy: items
