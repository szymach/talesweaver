---
Talesweaver\Application\Event\Create\DTO:
    constraints:
        - Talesweaver\Integration\Symfony\Validation\Constraints\UniqueDTO:
            fields: { name: 't.name', scene: 'e.scene' }
            repositoryMethod: entityExists
            path: name
            entityClass: Talesweaver\Domain\Event
            message: event.exists
    properties:
        name:
            - NotBlank: ~
        model:
            - NotBlank: ~
            - Valid: ~
        scene:
            - NotBlank: ~

Talesweaver\Application\Event\Edit\DTO:
    constraints:
        - Talesweaver\Integration\Symfony\Validation\Constraints\UniqueDTO:
            fields: { name: 't.name', scene: 'e.scene' }
            repositoryMethod: entityExists
            id: id
            path: name
            entityClass: Talesweaver\Domain\Event
            message: event.exists
    properties:
        name:
            - NotBlank: ~
        model:
            - NotBlank: ~
            - Valid: ~

Talesweaver\Domain\Event\Meeting:
    constraints:
        - Talesweaver\Integration\Symfony\Validation\Constraints\Event\Meeting: ~
    properties:
        root:
            - NotBlank: ~
        location:
            - NotBlank: ~
        relation:
            - NotBlank: ~
