{% extends 'menu/knpMenu.html.twig' %}
{% import 'knp_menu.html.twig' as knp_menu %}

{% block root %}
    {#<nav class="navbar navbar-default">#}
    {% set listAttributes = item.childrenAttributes %}
    {{ block('list') -}}
    {#</nav>#}
{% endblock %}

{% block list %}
    {% if item.hasChildren and options.depth is not same as(0) and item.displayChildren %}
        {% if item.level > 0 %}
            {% set listAttributes = listAttributes|merge({'class': (listAttributes.class|default('') ~ ' dropdown-menu')|trim}) %}
        {% endif %}
        <ul{{ knp_menu.attributes(listAttributes) }}>
            {{ block('children') }}
        </ul>
    {% endif %}
{% endblock %}

{% block item %}
    {% if item.displayed %}
        {# building the class of the item #}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}
        {%- if item.children is not empty %}
            {%- set classes = classes|merge(['dropdown']) %}
        {%- endif %}

        {# Mark item as "leaf" (no children) or as "branch" (has children that are displayed) #}
        {% if item.hasChildren and options.depth is not same as(0) %}
            {% if options.branch_class is not empty and item.displayChildren %}
                {%- set classes = classes|merge([options.branch_class]) %}
            {% endif %}
        {% elseif options.leaf_class is not empty %}
            {%- set classes = classes|merge([options.leaf_class]) %}
        {%- endif %}

        {%- set attributes = item.attributes %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}

        <li{{ knp_menu.attributes(attributes) }}>
            {%- if item.uri is not empty and (not matcher.isCurrent(item) or options.currentAsLink) %}
                {{ block('linkElement') }}
            {%- else %}
                {{ block('spanElement') }}
            {%- endif %}
            {# render the list of children#}
            {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
            {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
            {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
            {{ block('list') }}
        </li>
    {% endif %}
{% endblock %}

{% block linkElement %}
    {% set linkAttributes = item.linkAttributes %}
    {%- if item.children is not empty %}
        {% set linkAttributes = linkAttributes|merge({'class': (linkAttributes.class|default('') ~ ' dropdown-toggle')|trim, 'data-toggle': 'dropdown'}) %}
    {%- endif %}
    <a href="{{ item.uri }}"{{ knp_menu.attributes(linkAttributes) }}>{{ block('label') }}</a>
{% endblock %}

{% block spanElement %}
    {% set linkAttributes = item.linkAttributes %}
    {%- if item.children is not empty %}
        {% set linkAttributes = linkAttributes|merge({'class': (linkAttributes.class|default('') ~ ' dropdown-toggle')|trim, 'data-toggle': 'dropdown'}) %}
    {%- endif %}
    <a href="#"{{ knp_menu.attributes(linkAttributes) }}>
        {{ block('label') }}
        {%- if item.children is not empty %}
            <i class="fa fa-caret-down"></i>
        {%- endif %}
    </a>
{% endblock %}
